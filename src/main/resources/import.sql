//Categories
INSERT INTO `category`(`category`) VALUES ("Databases");
INSERT INTO `category`(`category`) VALUES ("Java");
INSERT INTO `category`(`category`) VALUES ("PHP");
INSERT INTO `category`(`category`) VALUES ("C#");
INSERT INTO `category`(`category`) VALUES ("Python");
INSERT INTO `category`(`category`) VALUES ("R");

//Subcategories
INSERT INTO sub_category(sub_category, category_id) VALUES ("SQL", 1);
INSERT INTO sub_category(sub_category, category_id) VALUES ("NoSQL", 1);
INSERT INTO sub_category(sub_category, category_id) VALUES ("Spring", 2);
INSERT INTO sub_category(sub_category, category_id) VALUES ("Struts", 2);
INSERT INTO sub_category(sub_category, category_id) VALUES ("Laravel", 3);
INSERT INTO sub_category(sub_category, category_id) VALUES ("CodeIgniter", 3);
INSERT INTO sub_category(sub_category, category_id) VALUES (".net", 4);
INSERT INTO sub_category(sub_category, category_id) VALUES ("LINQ", 4);
INSERT INTO sub_category(sub_category, category_id) VALUES ("Django", 5);
INSERT INTO sub_category(sub_category, category_id) VALUES ("Pandas", 5);
INSERT INTO sub_category(sub_category, category_id) VALUES ("RStudio", 6);
INSERT INTO sub_category(sub_category, category_id) VALUES ("TidyVerse", 6);

//Questions
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 1, 1 ,'When you have a subquery inside of the main query, which query is executed first?', 1);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 2, 1 ,'You need to export the entire database, including the database objects, in addition to the data. Which command-line tool do you use?', 1);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 3, 1 ,'You must ensure the accuracy and reliability of the data in your database. You assign some constraints to limit the type of data that can go into a table. What type of constraints are you assigning?', 1);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 4, 1 ,'Which option of most MySQL command-line programs can be used to get a description of the programs different oIf you were building a table schema to store student grades as a letter (A, B, C, D, or F) which column type would be the best choice?ptions?', 1);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 5, 1 ,' MySQL uses environment variables in some of the programs and command-line operations. Which variable is used by the shell to find MySQL programs?', 1);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 6, 2 ,'Which query would NOT be used to administer a MySQL server?', 1);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 7, 2 ,'What is the product of the database designing phase?', 1);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 8, 2 ,'MySQL server can operate in different SQL modes, depending on the value of the sql_mode system variable. Which mode changes syntax and behavior to conform more closely to standard SQL?', 1);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 9, 2 ,'MySQL programs are a set of command-line utilities that are provided with typical MySQL distributions. MySQL is designed to be a database.', 1);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 10, 2 ,'Which MySQL command shows the structure of a table?', 1);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 11, 3 ,'MySQL uses security based on _ for all connections, queries, and other operations that users can attempt to perform.', 1);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 12, 3 ,'Which MySQL command modifies data records in a table?', 1);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 13, 3 ,'What is the best type of query for validating the format of an email address in a MySQL table?', 1);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 14, 3 ,'In MySQL, queries are always followed by what character?', 1);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 15, 3 ,'How can you remove a record using MySQL?', 1);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 16, 1 ,'Which types of indexes are available in CosmosDB?', 2);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 17, 1 ,'You want to connect a DynamoDB stream to AWS Lambda function?', 2);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 18, 1 ,' To index a field that holds an array value in MongoDB, which index type do you create?', 2);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 19, 1 ,'You want to test HBASE on your laptop using the fewest number of steps. What do you do?', 2);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 20, 1 ,'You need to create a document database that supports database triggers. Which NoSQL database should you use?', 2);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 21, 2 ,' What is recommended size for Redis keys?', 2);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 22, 2 ,' You need to design security for DynamoDB to allow users read-only access to certain items and attributes in a table. What do you do?', 2);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 23, 2 ,'What does redis use to sort the elements of a sorted set?', 2);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 24, 2 ,'You need to change the shard key of an existing MongoDB collection. What do you do?', 2);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 25, 2 ,'Polyglot storage means using multiple types of what in the same application?', 2);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 26, 3 ,'You need to implement the simplest possible scalable, in-memory cache for your AWS application. Which service do you select?', 2);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 27, 3 ,' You are doing data modelling for Google BigTable. Which statement expresses if and when you should split entities across multiple rows?', 2);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 28, 3 ,'Which two characteristics define Amazon Quantum Ledger Database?', 2);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 29, 3 ,'You need to design the primary key for DynamoDB based on three attributes. What do you do?', 2);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 30, 3 ,'You need to design the primary key for DynamoDB based on three attributes. What do you do?', 2);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 31, 1 ,'How filters are used in Spring Web?', 3);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 32, 1 ,'How is a resource defined in the context of a REST service?', 3);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 33, 1 ,'Which of these is a valid Advice annotation?', 3);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 34, 1 ,'What does a ViewResolver do?', 3);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 35, 1 ,'How are Spring Data repositories implemented by Spring at runtime?', 3);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 36, 2 ,'What is SpEL and how is it used in Spring?', 3);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 37, 2 ,'The process of linking aspects with other objects to create an advised object is called', 3);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 38, 2 ,'How are JDK Dynamic proxies and CGLIB proxies used in Spring?', 3);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 39, 2 ,'Which of these is not a valid method on the JoinPoint interface?', 3);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 40, 2 ,'In what order do the @PostConstruct annotated method, the init-method parameter method on beans and the afterPropertiesSet() method execute?', 3);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 41, 3 ,'What is the function of the @Transactional annotation at the class level?', 3);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 42, 3 ,'What is the root interface for accessing a Spring bean container?', 3);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 43, 3 ,'Which annotation can be used within Spring Security to apply method level security?', 3);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 44, 3 ,'What is the purpose of the @Lazy annotation and why would you use it?', 3);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 45, 3 ,'What is dependency injection?', 3);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 46, 1 ,'Which of the following is correct about FreeMaker result type?', 4);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 47, 1 ,'Which technology can be used at View Layer in Struts?', 4);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 48, 1 ,' In which configuration file is a link between the View and Model components in the Web Client but you would not have to touch these settings for 99.99% of your projects?', 4);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 49, 1 ,'ActionServlet, RequestProcessor and Action classes are the components of', 4);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 50, 1 ,'In Which technology Struts 2 provides various types of tags such as UI tags, Data tags, control tags etc. to ease the development of struts 2 application?', 4);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 51, 2 ,'How to override default configuration of struts 2', 4);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 52, 2 ,' Struts supports which of these model components?', 4);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 53, 2 ,'What does validate() method of ActionForm returns?', 4);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 54, 2 ,'Which is used to make asynchronous request i.e. it doesnt block the user and it sends only required field data to the server side not all, So it makes the performance fast?', 4);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 55, 2 ,'Which type of validation we must implement the Validateable interface (or extend ActionSupport class) and provide the implementation of validate method?', 4);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 56, 3 ,'Which of the following delegates the request handling to the RequestProcessor instance?', 4);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 57, 3 ,'What is the role of ActionContextCleanUp class in struts 2?', 4);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 58, 3 ,'Which of the following methods is overridden by Action class?', 4);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 59, 3 ,'reset() method signature in ActionForm?', 4);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 60, 3 ,' Which of the following tag is used to render a I18n text message?', 4);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 61, 1 ,'Which method returns the average value of a given key ?', 5);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 62, 1 ,'Bootstrap directory in Laravel is used to', 5);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 63, 1 ,'Which artisan command is used to remove the compiled class file.', 5);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 64, 1 ,'Which method breaks the collection into multiple, smaller collections of a given size', 5);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 65, 1 ,'Artisan command to flush the application cache:', 5);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 66, 2 ,'The vendor directory contains', 5);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 67, 2 ,'Where is the routing file located in Laravel ?', 5);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 68, 2 ,'View files in Laravel end in', 5);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 69, 2 ,'Which of following command is used to create a symbolic link from "public/storage" directory to "storage/app/public".', 5);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 70, 2 ,'Which of following methods are used in database migrations classes?', 5);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 71, 3 ,'For what do the .env is used?', 5);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 72, 3 ,'Which directory contain �robot.txt� file ?', 5);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 73, 3 ,'Interpolation of variable in laravel done using', 5);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 74, 3 ,'What is the HTTP Status Code for your website. When it is down for maintenance.', 5);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 75, 3 ,'Where do we need to set database connection in Laravel?', 5);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 76, 1 ,'What is codeigniter?', 6);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 77, 1 ,'What is codeigniter used for', 6);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 78, 1 ,'List features of Codeigniter?', 6);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 79, 1 ,'Codeigniter was initially released in', 6);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 80, 1 ,'Which one is the business logic in codeigniter?', 6);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 81, 2 ,'Which of the followings are the different types of hook point in Codeigniter?', 6);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 82, 2 ,'The routing file is located in ............. in CodeIgniter.', 6);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 83, 2 ,'Which of the following ORM is supported by CodeIgniter Framework?', 6);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 84, 2 ,'Which of the following function is use to set the value of form input box ?', 6);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 85, 2 ,'How to update data using Active Record Pattern in CodeIgniter?', 6);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 86, 3 ,'Which of the follwoing will be treated as method in that URI?', 6);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 87, 3 ,'Which function gives you to view file friendly syntax to get browser cookies?', 6);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 88, 3 ,'You can display the amount of memory used by the system by calling:', 6);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 89, 3 ,'Which folder will contain base class of your application?', 6);
INSERT INTO `question`(`id`, `difficulty_level`, `question`, `sub_category_id`) VALUES ( 90, 3 ,'The _________ file contains functions that assist in working with arrays', 6);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (91,1, "What is the difference between a stack and queue?", 7);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (92,1, "Which group contains all official types of JIT compilations?", 7);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (93,1, "What is Kestrel?", 7);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (94,1, " When would you use asynchronous actions?", 7);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (95,1, "When you define an abstract method, how do you use it in a derived class?", 7);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (96, 2, "Which code do you use if you want to trigger a garbage collection in .NET?", 7);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (97, 2, "What makes a strong-named assembly?", 7);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (98, 2, "Which is a set of features that extends the query capabilities of the .NET language syntax by adding sets of new standard query operators that allow data manipulation, regardless of the data source?", 7);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (99, 2, " What is the single responsibility principle?", 7);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (100, 2, "Assuming y is a value type, which is an example of boxing?", 7);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (101, 3, "You want to encapsulate a command request as an object. Which design pattern best fits this objective?", 7);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (102,3, "You want to create a class of which only a single instance can exist. Which design pattern best fits this objective?", 7);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (103, 3, "What do code contracts do?", 7);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (104,3, "Which is NOT true about a constant variable?", 7);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (105,3, "Which choice creates an 8-tuple containing prime numbers that are less than 20?", 7);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (106,1, "How would you write code for an integer property called Age with a getter and setter?", 8);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (107,1, "When using a thread pool what happens to a given thread after it finishes its task?", 8);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (108,1, "Which choice represents a class that inherits behavior from a base class?", 8);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (109,1, "What does operator overloading allow you to do?", 8);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (110,1, "What it the main purpose of LINQ?", 8);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (111,2, "What is the correct syntax for a new generic list of strings named contacts?", 8);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (112,2, "What character would you use to start a regular expression pattern at a word boundary?", 8);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (113,2, "You're dealing with multiple assemblies in your program, but are worried about memory allocation. At what point in the program life cycle are assemblies loaded into memory?", 8);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (114,2, "When would you use generics in your code?", 8);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (115,2, "What is the difference between an anonymous type and a regular data type?", 8);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (116,3, "Lambda expressions are often used in tandem with which of the following?", 8);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (117,3, "How does the async keyword work?", 8);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (118,3, "How are C# classses limited?", 8);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (119,3, "What are the four keywords associated with exception handling in C#?", 8);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (120,3, "What is the difference between finally and finalize blocks?", 8);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (121,1, "To cache your entire site for an application in Django, you add all except which of these settings?", 9);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (122,1, "In which programming language is Django written?", 9);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (123,1, "To automatically provide a value for a field, or to do validation that requires access to more than a single field, you should override the ___ method in the ___ class.", 9);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (124,1, "How do you determine at startup time if a piece of middleware should be used?", 9);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (125,1, "How do you turn off Django�s automatic HTML escaping for part of a web page?", 9);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (126,2, "Which step would NOT help you troubleshoot the error django-admin: command not found?", 9);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (127,2, "Every time a user is saved, their quiz_score needs to be recalculated. Where might be an ideal place to add this logic?", 9);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (128,2, "What is the correct way to begin a class called Rainbow in Python?", 9);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (129, 2, "You have inherited a Django project and need to get it running locally. It comes with a requirements.txt file containing all its dependencies. Which command should you use?", 9);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (130, 2, "Which best practice is NOT relevant to migrations?", 9);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (131, 3, "What will this URL pattern match? url(r'^$', views.hello)", 9);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (132, 3, "Django's class-based generic views provide which classes that implement common web development tasks?", 9);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (133, 3, "What is the correct way to make a variable available to all of your templates?", 9);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (134, 3, "You want to create a page that allows editing of two classes connected by a foreign key (e.g., a question and answer that reside in separate tables). What Django feature can you use?", 9);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (135, 3, "Which function of Django's Form class will render a form's fields as a series of tags?", 9);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (136, 1, "What happens when you use the build-in function any() on a list?", 10);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (137, 1, "What data structure does a binary tree degenerate to if it isn't balanced properly?", 10);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (138, 1, "What statement about static methods is true?", 10);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (139, 1, "What built-in list method would you use to remove items from a list?", 10);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (140, 1, "What is one of the most common use of Python's sys library?", 10);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (141, 2, "What is the runtime of accessing a value in a dictionary by using its key?", 10);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (142, 2, "What built-in Python data type is commonly used to represent a stack?", 10);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (143, 2, "What is the correct syntax for defining a class called Game, if it inherits from a parent class called LogicGame?", 10);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (144, 2, " Which of these is NOT a characteristic of namedtuples?", 10);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (145, 2, "What is an instance method?", 10);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (146, 3, "Which statement does NOT describe the object-oriented programming concept of encapsulation?", 10);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (147, 3, "What built-in Python data type is best suited for implementing a queue?", 10);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (148, 3, "What is the correct syntax for instantiating a new object of the type Game?", 10);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (149, 3, "What does the built-in map() function do?", 10);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (150, 3, "Which collection type is used to associate values with unique keys?", 10);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (151, 1, "How does a matrix differ from a data frame?", 11);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (152, 1, "What value does this statement return? unclass(as.Date('1971-01-01'))", 11);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (153, 1, "What do you use to take an object such as a data frame out of the workspace?", 11);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (154, 1, "The variable height is a numeric vector in the code below. Which statement returns the value 35?", 11);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (155, 1, "Which choice does R regard as an acceptable name for a variable?", 11);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (156, 2, "What is the principal difference between an array and a matrix?", 11);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (157, 2, "Which is not a property of lists and vectors?", 11);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (158, 2, "Which function displays the first five rows of the data frame named pizza?", 11);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (159, 2, "You accidentally display a large data frame on the R console, losing all the statements you entered during the current session. What is the best way to get the prior 25 statements back?", 11);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (160, 2, "How does a vector differ from a list?", 11);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (161, 3, "What statement shows the objects on your workspace?", 11);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (162, 3, "What function joins two or more column vectors to form a data frame?", 11);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (163, 3, "Two variable in the mydata data frame are named Var1 and Var2. How do you tell a bivariate function, such as cor.test, which two variables you want to analyze?", 11);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (164, 3, "How to name rows and columns in DataFrames and Matrices F in R?", 11);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (165, 3, "Which function in R combines differents values into a single object?", 11);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (166, 1, "what mean 'geoms' in ggplot2?", 12);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (167, 1, "what mean 'aes' in ggplot2?", 12);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (168, 1, "What is ggplot2?", 12);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (169, 1, "What is the geom reference for a Scatter Plot?", 12);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (170, 1, "What is the geom reference for a Histogram?", 12);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (171, 2, "When to use a Histogram?", 12);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (172, 2, "When to use a Correlogram?", 12);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (173, 2, "When to use a Scatter Plot?", 12);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (174, 2, "What are the Scales in ggplot2?", 12);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (175, 2, "What is Facetting in ggplot2?", 12);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (176, 3, "Which strings could be returned by the function ls(path = ^V)?", 12);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (177, 3, "A list can contain a list as an element. MyList has five columns, and the third column''s item is a list of three items. How do you put all seven values in MyList into a single vector?", 12);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (178, 3, "What is the tidyverse library for animate ggplot2 plots?", 12);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (179, 3, "What is the tidyverse library who allows the use of various filters and shaders on ggplot2?", 12);
INSERT INTO question(id, difficulty_level, question, sub_category_id) VALUES (180, 3, "How to plot a data set in single command ?", 12);

//Answers
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('The subquery is never executed. Only the main query is executed.',0,1);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' They are executed at the same time',0,1);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' the main query',0,1);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' the subquery',1,1);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('mysqlexport',0,2);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('mysqladmin',0,2);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('mysqldump',1,2);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('mysqld',0,2);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' row level',0,3);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' database level',0,3);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' column level',1,3);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' function level',0,3);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' --options',0,4);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' ?',0,4);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' --help',1,4);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' -h',0,4);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('DIR',0,5);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('HOME',0,5);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('PATH',1,5);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('MYSQL_HOME',0,5);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' USE db',0,6);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' SELECT column FROM tbl',1,6);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' SHOW COLUMNS FROM tbl',0,6);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' SHOW TABLES',0,6);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' system definition',0,7);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' logical model',1,7);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' physical model',0,7);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' normalized database',0,7);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' TRADITIONAL',0,8);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('ANSI',1,8);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('MSSQL',0,8);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('STRICT',0,8);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' database and programming',0,9);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' user and administrator',0,9);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' client and server',1,9);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' syntax and objects',0,9);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' INFO table;',0,10);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' SHOW table;',0,10);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' STRUCTURE table;',0,10);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' DESCRIBE table;',1,10);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' administrator schema',0,11);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' encrypted algorithms',0,11);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' user settings',0,11);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' access control lists reference',1,11);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' UPDATE',1,12);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('MODIFY',0,12);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('CHANGE',0,12);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('ALTER',0,12);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' a SQL query using partitions',0,13);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' a SQL query using IS NULL',0,13);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' a SQL query using a regular expression',1,13);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' a SQL query using LTRIM Or RTRIM',0,13);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' line break',0,14);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('colon',0,14);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' semicolon',1,14);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('period',0,14);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('DELETE',0,15);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' DELETE FROM',1,15);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('REMOVE',0,15);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' REMOVE FROM',0,15);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' range and spatial',1,16);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' secondary and primary key',0,16);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' secondary and spatial',0,16);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' range and primary key',0,16);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' DynamoDB table',0,17);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' DynamoDB trigger',1,17);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' DynamoDB item',0,17);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' DynamoDB index',0,17);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('partial',0,18);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('sparse',0,18);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('compound',0,18);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('multikey',1,18);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Set up Hadoop in pseudo-distributed mode.',0,19);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Set up HBASE in local mode.',0,19);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Set up HBASE in pseudo-distributed mode.',1,19);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Set up Hadoop in local mode.',0,19);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('DynamoDB',1,20);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('BigTable',0,20);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Redis',0,20);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('MongoDB',0,20);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('medium',0,21);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('short',1,21);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' single bit',0,21);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('long',0,21);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Use lAM policy conditions',0,22);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Use lAM roles',0,22);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Use VPC endpoint',0,22);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Use lAM policies',1,22);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Scores',0,23);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Ids',0,23);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Values',0,23);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Keys',1,23);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Dump the collection data, drop the collection, create a new collection and shard key, import the data.',0,24);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Add second shard key and drop the first shard key.',0,24);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Dump the collection data, drop the collection, presplit the data, create a new collection and shard key, import the data.',1,24);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Drop and recreate the shard key.',0,24);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Security systems.',0,25);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Database systems.',0,25);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Storage systems.',0,25);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Query systems.',0,25);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Elasticache using Memcached.',0,26);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('DynamoDB',0,26);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' DynamoDB Accelerator (DAX).',0,26);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Elasticache using Redis.',1,26);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Keep all information for an entity in a single row. Store related entities in adjacent rows.',0,27);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Keep all information for an entity in a single row.',0,27);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Split entities across multiple rows if the entity data is over thousands of MBs, or if it does not need atomic updates and reads.',0,27);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Split entities across multiple rows if the entity data is over hundreds of MBs, or if it does not need atomic updates and reads.',1,27);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Key-value data model; transactionally consistent with ACID semantics.',0,28);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Document data model; transactionally consistent with ACID semantics.',1,28);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Key-value data model; transactions with tunable consistency.',0,28);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Document data model; transactions with tunable consistency.',0,28);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Designate all three fields as the primary key.',0,29);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Concatenate all three fields into one new field, then designate that new field as the primary key.',1,29);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Designate two fields of the three fields as the primary key.',0,29);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Concatenate two fields into one new field, then designate that new field and the remaining field as the primary key.',0,29);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Designate all three fields as the primary key.',0,30);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Concatenate all three fields into one new field, then designate that new field as the primary key.',1,30);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Designate two fields of the three fields as the primary key.',0,30);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Concatenate two fields into one new field, then designate that new field and the remaining field as the primary key.',0,30);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Filters are called before a request hits the DispatcherServlet.They allow for interception-style, chained processing of web requests for security, timeouts, and other purposes.',0,31);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Filters are used with a checksum algorithm that will filter invalid bytes out of a byte stream request body and allow for processing of HTTP requests from the DispatcherRequestServlet.',0,31);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Filters are used with a checksum algorithm that will filter invalid bytes out of an octet stream a multipart upload and allow for chained processing of WebDispatcherServlet requests.',0,31);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Filters are used to validate request parameters out of the byte stream request body and allow for processing of requests from the DispatcherRequestServlet.',1,31);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' A resource is the actual String literal that composes a URI that is accessed on a RESTful web service.',0,32);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' It is an abstract concept that represents a typed object, data, relationships, and a set of methods that operate on it that is accessed via a URI.',1,32);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' A REST service has a pool of resources composed of allocations of memory that allow a request to be processed.',0,32);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' A resource for a REST service is an explicit allocation of a thread or CPU cycles to allow a request to be processed.',0,32);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' @AfterError',0,33);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' @AfterReturning',1,33);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' @AfterException',0,33);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' @AfterExecution',0,33);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' It supports internationalization of web applications by detecting a users locale.',0,34);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' It generates a view by mapping a logical view name returned by a controller method to a view technology.',1,34);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' It creates a unique view determined by the users browser type,supporting cross-browser compatibility.',0,34);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' It maps custom parameters to SQL views in the database, allowing for dynamic content to be created in the response.',0,34);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Spring automatically generated code for you based on your YAML config that defined a MethodInterceptor chain that intercept calls to the instance and computed SQL on the fly.',0,35);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' A JDK proxy instance is created, which backs the repository interface, and a MethodInterceptor intercepts calls to the instance and routes as required.',1,35);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' The Spring JDK proxy creates a separate runtime process that acts as an intermediary between the database and the Web server, and intercepts calls to the instance and handles requests.',0,35);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Spring automatically generated code for you based on your XML config files that define a SpringMethodAutoGeneration factory that intercepts calls to the instance and creates dynamic method that computer SQL on the fly.',0,35);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' SpEL(Spring Expression Language) runs in the JVM and can act as a drop-in replacement for Groovy or other languages.',0,36);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' SpEL(Spring Expression Language) supports boolean and relational operators and regular expressions, and is used for querying a graph of objects at runtime.',1,36);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' SpEL(Spring Expression Language) allows you to build, configure,and execute tasks such as building artifacts and downloading object dependencies.',0,36);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' SpEL(Spring Expression Language) natively transpiles one JVM language to another, allowing for greater flexibility.',0,36);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' dynamic chaining',0,37);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' banding',0,37);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('weaving',1,37);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' interleaving',0,37);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' JDK Dynamic proxy can proxy only interface, so it is used if the target implements at least one interface. A CGLIB proxy can create a proxy by subclassing and is used if the target does not implement an interface.',1,38);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Only JDK Dynamic proxies are used in the Spring Bean Lifecycle. CGLIB proxies are used only for integrating with other frameworks.',0,38);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Only CGLIB proxies are used in the Spring Bean Lifecycle. JDK Dynamic proxies are used only for integrating with other frameworks.',0,38);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' JDK Dynamic proxy can only using an abstract class extended by a target. A CGLIB proxy can create a proxy through bytecode interweaving and is used if the target does not extend an abstract class.',0,38);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' getArgs()',0,39);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' getExceptions()',1,39);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' getSignature()',0,39);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' getTarget()',0,39);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' 1. afterPropertiesSet() 2. init-method 3. @PostConstruct',0,40);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' 1. @PostConstruct 2. afterPropertiesSet() 3. init-method',1,40);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' 1. init-method 2. afterPropertiesSet() 3. @PostConstruct',0,40);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' You cannot use these methods together-you must choose only one.',0,40);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Its a transaction attribute configured by spring.security.transactions.xml config file that uses Springs transaction implementation and validation code.',0,41);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Its a transaction must actively validate by the bytecode of a transaction using Springs TransactionBytecodeValidator class. Default Transaction behavior rolls back on validation exception but commits on proper validation',0,41);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' It creates a proxy that implements the same interface(s) as the annotated class, allowing Spring to inject behaviors before, after, or around method calls into the object being proxied.',1,41);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Its a transaction that must be actively validated by Springs TransactionValidator class using Springs transaction validation code. Default Transaction behavior rolls back on validation exception.',0,41);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' SpringInitContainer',0,42);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('ResourceLoader',0,42);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('ApplicationEventPublisher',0,42);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('BeanFactory',1,42);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' @Secured',1,43);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' @RequiresRole',0,43);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' @RestrictedTo',0,43);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' @SecurePath',0,43);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' It prevents a bean from being created and injected until you run a specific CLI command. It reduces complexity in the application.',0,44);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' It can be applied to a bean so that the bean is not persisted in the database. It reduces the number of database operations.',0,44);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' It can be applied to a bean so that the bean is not created and injected until it is needed. It can help speed up startup time for your application.',1,44);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' It prevents a bean from being created and injected until it receives a HTTP request to a callback hook. It reduces disk footprint.',0,44);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' a method by which objects define dependencies they need as abstractions that allows the framework to instantiate and configure them in a central location at runtime.',1,45);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' a paradigm where dependent code is injected into the bytecode of a Java application on a remote server.',0,45);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' a way of injecting remote dependencies into a pre-packaged JAR file from the file system.',0,45);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' a way of injecting remote dependencies into a pre-packaged WAR file from the file system.',0,45);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('It is used to forward to a servlet, JSP, HTML page, and so on, on the server. It uses the RequestDispatcher.forward() method',0,46);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('It is used to generate output using predefined templates',1,46);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' It calls the standard response.sendRedirect() method, causing the browser to create a new request to the given location',0,46);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' None of the above',0,46);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('J2EE',0,47);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('DHTML',0,47);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('XML/XSLT',1,47);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('JavaScript',0,47);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('The struts-config.xml file',1,48);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('The struts.xml file',0,48);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('The web.xml file',0,48);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('The struts.properties file',0,48);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('View',0,49);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Model',0,49);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Controller',1,49);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Deployment',0,49);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Various Result support',0,50);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Integration Support',0,50);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Various Tag support',1,50);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Theme and Template support',0,50);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Use struts.properties',0,51);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Use custom file name and register it',1,51);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Both a and b',0,51);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('None',0,51);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('JavaBeans',0,52);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('EJB',0,52);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('CORBA',0,52);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('All of these',1,52);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('ActionErrors',0,53);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('ActionForward',1,53);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('ActionMapping',0,53);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('ActionError',0,53);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('AJAX Support',1,54);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Integration Support',0,54);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Various Tag Support',0,54);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Theme and Template Support',0,54);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' By Input Validation',0,55);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('By Ajax Validation',0,55);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('By Custom Validation',1,55);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' None of the above',0,55);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('ActionServlet',1,56);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Action class',0,56);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Deployment descriptor',0,56);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('None of the above',0,56);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Handles special clean up task when filters need access to an initialized struts framework',1,57);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Works like garbage collector in java',0,57);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('All of these',0,57);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('None',0,57);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('run()',0,58);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('destroy()',0,58);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('execute()',1,58);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('service()',0,58);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('public void reset(ActionMapping mapping, HttpServletRequest request)',0,59);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('public ActionErrors reset(ActionMapping mapping, HttpServletRequest request)',1,59);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('public ActionError reset(ActionMapping mapping, HttpServletRequest request)',0,59);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('None of the above',0,59);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('set tag',0,60);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('text tag',0,60);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('url tag',1,60);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('push tag',0,60);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' average()',0,61);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' avg()',1,61);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('median()',0,61);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('avg_val()',0,61);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Initialize a Laraval application',1,62);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Call laravel library functions',0,62);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Load the configuration files',0,62);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Load laravel classes and models',0,62);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('clear-compiled',1,63);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('clear compiled',0,63);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('compiled:clear',0,63);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('clear:all',0,63);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('split()',0,64);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('chunk()',1,64);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('explode()',0,64);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('break()',0,64);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('cache:flush',0,65);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('cache:clear',1,65);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('cache:forget',0,65);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('cache:remove',0,65);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Laravel Framework code',0,66);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Assets',0,66);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Third-party code',1,66);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Configuration files',0,66);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('app/Http/',0,67);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('routes/',1,67);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('urls/',0,67);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('vendors/',0,67);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('.blade.php',1,68);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('.php',0,68);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('.vue',0,68);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('.blade',0,68);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('storage:link',1,69);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('link:public',0,69);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('link:storage',0,69);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('storage:link public/storage',0,69);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('execute() and rollback()',0,70);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('up() and down()',1,70);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('run() and delete()',0,70);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('save() and update()',0,70);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('For setting environment variables',1,71);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('For running cron jobs',0,71);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('For tracking vendors',0,71);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('None of These',0,71);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('app',0,72);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('public',1,72);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('config',0,72);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('storage',0,72);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('compact',0,73);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('{{}}',1,73);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('helpers',0,73);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('None of the above',0,73);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('501',0,74);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('200',0,74);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('400',0,74);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('503',1,74);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('config.php',0,75);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' setting.php',0,75);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('In seed files',0,75);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('.ENV file',1,75);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Java web application framework',0,76);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('PHP web application framework',1,76);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Python web application framework',0,76);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('None Of The Above',0,76);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Developing android applications',0,77);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Developing ios applications',0,77);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Developing web applications',1,77);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('All of the above',0,77);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Model View Controller support System',0,78);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Extremely Light Weight',0,78);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Full Featured database classes with compatibility to several platforms',0,78);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('All of the above',1,78);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('February 28, 2006',1,79);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('February 27, 2006',0,79);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('February 28, 2007',0,79);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('None Of The Above',0,79);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('View',0,80);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Model',1,80);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Controller',0,80);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('None Of The Above',0,80);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('post_sytem',0,81);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('pre_controller',0,81);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('post_controller_constructor',0,81);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' All of the above',1,81);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('assets folder',0,82);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('config folder',1,82);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('controller folder',0,82);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' None Of The Above',0,82);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Gas',1,83);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Doctrine',0,83);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('DataMapper',0,83);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('All of the above',0,83);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('set()',0,84);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('set_value()',1,84);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('setvalue()',0,84);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('None Of The Above',0,84);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('$this->db->update(mytable, $object);',1,85);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('$this->db->updated(mytable, $object);',0,85);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('$this->db->updateData(mytable, $object)',0,85);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('None Of The Above',0,85);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('somethingvtwo',1,86);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('index.php',0,86);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('somethingvone',0,86);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('None Of The Above',0,86);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('get_cookie()',1,87);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('list_cookie()',0,87);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('dis_cookie()',0,87);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('set_cookie()',0,87);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('this->benchmark->memory_use()',0,88);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('this->memory_use()',0,88);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('this->benchmark->memory_usage()',1,88);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('this->memory_usage()',0,88);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Logs',0,89);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Core',1,89);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Models',0,89);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Helpers',0,89);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Date Helper',0,90);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES (' Cookie Helper',0,90);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('Array Helper',1,90);
INSERT INTO `answer`(`answer`, `correct`, `question_id`) VALUES ('None of above',0,90);
INSERT INTO answer(answer, correct, question_id) VALUES ("Queues process value types by a top-down hierarchy - first in, first out (FIFO). Stacks follow this principle and insert items from the lower end while deleting ones from the top - last in, first-out (LIFO)",0,91);
INSERT INTO answer(answer, correct, question_id) VALUES ("Queues process value types by a top-down hierarchy-last in, first-out (LIFO). Stacks follow this principle and insert items from the lower end while deleting ones from the top-first in, first-out (FIFO)",0,91);
INSERT INTO answer(answer, correct, question_id) VALUES ("Stacks process value types by a top-down hierarchy - last in, first-out (LIFO). Queues follow this principle and insert items from the lower end while deleting ones from the top - first in, first-out (FIFO)",1,91);
INSERT INTO answer(answer, correct, question_id) VALUES ("Stacks process value types by a top-down hierarchy-first in, first out (FIFO). Queues follow this principle and insert items from the lower end while deleting ones from the top-last in, first-out (LIFO)",0,91);
INSERT INTO answer(answer, correct, question_id) VALUES ("Pre-JIT, Quick-JIT, Coll-JIT",0,92);
INSERT INTO answer(answer, correct, question_id) VALUES ("Before-JIT, Quick-JIT, Cool-JIT",0,92);
INSERT INTO answer(answer, correct, question_id) VALUES ("Pre-JIT, Quick-JIT, Normal-JIT",0,92);
INSERT INTO answer(answer, correct, question_id) VALUES ("Pre-JIT, Econo-JIT, Normal-JIT",1,92);
INSERT INTO answer(answer, correct, question_id) VALUES ("an iOS web server initially that was later designed to work with .NET Core",0,93);
INSERT INTO answer(answer, correct, question_id) VALUES ("a cross-platform web server ASP.NET Core that is included by default in ASP.NET Core project templates** <= Correct",1,93);
INSERT INTO answer(answer, correct, question_id) VALUES ("a cross-platform, open-source web server that starts up web APIs",0,93);
INSERT INTO answer(answer, correct, question_id) VALUES ("a free and open-source cross-platform web server software that can communicate with IIS",0,93);
INSERT INTO answer(answer, correct, question_id) VALUES ("to release the quest thread of a I/O operation",0,94);
INSERT INTO answer(answer, correct, question_id) VALUES ("to capture the request thread of a I/O operation",0,94);
INSERT INTO answer(answer, correct, question_id) VALUES ("to avoid blocking the request thread while waits for an I/O operation",1,94);
INSERT INTO answer(answer, correct, question_id) VALUES ("to block the request thread if it waits for an I/O operation",0,94);
INSERT INTO answer(answer, correct, question_id) VALUES ("Abstract methods cannot be used in derived classes.",0,95);
INSERT INTO answer(answer, correct, question_id) VALUES ("In your derived class, overload the method.",0,95);
INSERT INTO answer(answer, correct, question_id) VALUES ("In your derived class, override the method.",1,95);
INSERT INTO answer(answer, correct, question_id) VALUES ("In your derived class, declare the method as virtual.",0,95);
INSERT INTO answer(answer, correct, question_id) VALUES ("Garbage.CleanUp();",0,96);
INSERT INTO answer(answer, correct, question_id) VALUES ("System.GC.Clear();",0,96);
INSERT INTO answer(answer, correct, question_id) VALUES ("System.GC.Collect();",1,96);
INSERT INTO answer(answer, correct, question_id) VALUES ("Garbage.Collect();",0,96);
INSERT INTO answer(answer, correct, question_id) VALUES ("an assembly with the version specified",0,97);
INSERT INTO answer(answer, correct, question_id) VALUES ("a signed assembly",1,97);
INSERT INTO answer(answer, correct, question_id) VALUES ("an assembly with culture information",0,97);
INSERT INTO answer(answer, correct, question_id) VALUES ("an assembly with the name marked as important",0,97);
INSERT INTO answer(answer, correct, question_id) VALUES ("XML",0,98);
INSERT INTO answer(answer, correct, question_id) VALUES ("C#",0,98);
INSERT INTO answer(answer, correct, question_id) VALUES ("LINQ",1,98);
INSERT INTO answer(answer, correct, question_id) VALUES ("XAML",0,98);
INSERT INTO answer(answer, correct, question_id) VALUES ("Software entities should be open for extension, but closed for modification.",0,99);
INSERT INTO answer(answer, correct, question_id) VALUES ("Entities must depend on abstractions, not on concrete implementations.",0,99);
INSERT INTO answer(answer, correct, question_id) VALUES ("Objects in a program should be repleaceble with instances of their subtypes without altering the correctness of that programm.",0,99);
INSERT INTO answer(answer, correct, question_id) VALUES ("A class should have only a single responsibility - that is, only changes to one part of the software's specification should be able to affect the specification of the class.",1,99);
INSERT INTO answer(answer, correct, question_id) VALUES ("y = (int)thisObject;",0,100);
INSERT INTO answer(answer, correct, question_id) VALUES ("int y = 3;",0,100);
INSERT INTO answer(answer, correct, question_id) VALUES ("y = (int)thisObject=;3;",0,100);
INSERT INTO answer(answer, correct, question_id) VALUES ("object thisObject = y;",1,100);
INSERT INTO answer(answer, correct, question_id) VALUES ("Command",1,101);
INSERT INTO answer(answer, correct, question_id) VALUES ("Iterator",0,101);
INSERT INTO answer(answer, correct, question_id) VALUES ("Facade",0,101);
INSERT INTO answer(answer, correct, question_id) VALUES ("Observer",0,101);
INSERT INTO answer(answer, correct, question_id) VALUES ("Adapter",0,102);
INSERT INTO answer(answer, correct, question_id) VALUES ("Singleton",1,102);
INSERT INTO answer(answer, correct, question_id) VALUES ("Bridge",0,102);
INSERT INTO answer(answer, correct, question_id) VALUES ("Decorator",0,102);
INSERT INTO answer(answer, correct, question_id) VALUES ("Code contracts are data structures that can operate on demand per requirements.",0,103);
INSERT INTO answer(answer, correct, question_id) VALUES ("Code contracts provide a way to specify preconditions, postconditions, and object invariants in your code.",1,103);
INSERT INTO answer(answer, correct, question_id) VALUES ("Code contracts contain definitions for a group of related functionalities that a class or a struct can implement.",0,103);
INSERT INTO answer(answer, correct, question_id) VALUES ("Code contracts contain data structures for a group of related functionalities that a class or a struct can implement.",0,103);
INSERT INTO answer(answer, correct, question_id) VALUES ("At compile time, the value is evaluated.",0,104);
INSERT INTO answer(answer, correct, question_id) VALUES ("Only at declaration can it be initialized.",0,104);
INSERT INTO answer(answer, correct, question_id) VALUES ("At runtime, its value is evaluated.",1,104);
INSERT INTO answer(answer, correct, question_id) VALUES ("It cannot be static.",0,104);
INSERT INTO answer(answer, correct, question_id) VALUES ("var primes = Tuple.Create(2, 3, 5, 7, 11, 13, 17, 19);",1,105);
INSERT INTO answer(answer, correct, question_id) VALUES ("var primes = Tuple.Create(2, 3, 5, 7, 11, 13, 17, 21);",0,105);
INSERT INTO answer(answer, correct, question_id) VALUES ("var primes = Tuple.Make(2, 3, 5, 7, 11, 13, 17, 20);",0,105);
INSERT INTO answer(answer, correct, question_id) VALUES ("var primes = Tuple.Make(2, 3, 5, 7, 11, 13, 17, 19);",0,105);
INSERT INTO answer(answer, correct, question_id) VALUES ("public int Age { get - set }",0,106);
INSERT INTO answer(answer, correct, question_id) VALUES ("public int Age: get set;",0,106);
INSERT INTO answer(answer, correct, question_id) VALUES ("public int Age (get, set );",0,106);
INSERT INTO answer(answer, correct, question_id) VALUES ("public int Age { get; set; }",1,106);
INSERT INTO answer(answer, correct, question_id) VALUES ("The thread is destroyed and memory is freed up.",0,107);
INSERT INTO answer(answer, correct, question_id) VALUES ("The thread runs in loop until the next assignment.",0,107);
INSERT INTO answer(answer, correct, question_id) VALUES ("The thread goes inactive in the background and waits for garbage collection.",1,107);
INSERT INTO answer(answer, correct, question_id) VALUES ("The thread returns to the pool for reuse.",0,107);
INSERT INTO answer(answer, correct, question_id) VALUES ("a second base class",0,108);
INSERT INTO answer(answer, correct, question_id) VALUES ("a revised class",0,108);
INSERT INTO answer(answer, correct, question_id) VALUES ("a derived class",1,108);
INSERT INTO answer(answer, correct, question_id) VALUES ("a parent class",0,108);
INSERT INTO answer(answer, correct, question_id) VALUES ("hide built-in operatores when necessary",0,109);
INSERT INTO answer(answer, correct, question_id) VALUES ("add methods to be interpreted by the compiler at runtime",0,109);
INSERT INTO answer(answer, correct, question_id) VALUES ("define how enums and other primitive value types work within the rest of the application",0,109);
INSERT INTO answer(answer, correct, question_id) VALUES ("define custom functionality for common operators like addition and equality",1,109);
INSERT INTO answer(answer, correct, question_id) VALUES ("to delete duplicate data",0,110);
INSERT INTO answer(answer, correct, question_id) VALUES ("to bind namespaces and assemblies",0,110);
INSERT INTO answer(answer, correct, question_id) VALUES ("to query and transform data",1,110);
INSERT INTO answer(answer, correct, question_id) VALUES ("to connect assemblies",0,110);
INSERT INTO answer(answer, correct, question_id) VALUES ("public List contacts = new List();",0,111);
INSERT INTO answer(answer, correct, question_id) VALUES ("public List(string names) contacts = new List(string names)();",0,111);
INSERT INTO answer(answer, correct, question_id) VALUES ("var contacts = new List();",1,111);
INSERT INTO answer(answer, correct, question_id) VALUES ("var contacts = new List(string);",0,111);
INSERT INTO answer(answer, correct, question_id) VALUES ("d",0,112);
INSERT INTO answer(answer, correct, question_id) VALUES ("\a",0,112);
INSERT INTO answer(answer, correct, question_id) VALUES ("\b",1,112);
INSERT INTO answer(answer, correct, question_id) VALUES ("\w",0,112);
INSERT INTO answer(answer, correct, question_id) VALUES ("at runtime",0,113);
INSERT INTO answer(answer, correct, question_id) VALUES ("at compile time",0,113);
INSERT INTO answer(answer, correct, question_id) VALUES ("only when required",1,113);
INSERT INTO answer(answer, correct, question_id) VALUES ("only when programmatically loaded",0,113);
INSERT INTO answer(answer, correct, question_id) VALUES ("to increase code performance",0,114);
INSERT INTO answer(answer, correct, question_id) VALUES ("all of these answers",1,114);
INSERT INTO answer(answer, correct, question_id) VALUES ("when code reuse is a priority",0,114);
INSERT INTO answer(answer, correct, question_id) VALUES ("when type safety is important",0,114);
INSERT INTO answer(answer, correct, question_id) VALUES ("Anonymous types don't have type names",1,115);
INSERT INTO answer(answer, correct, question_id) VALUES ("Anonymous types can only be static",0,115);
INSERT INTO answer(answer, correct, question_id) VALUES ("Anonymous types can be used only in struts",0,115);
INSERT INTO answer(answer, correct, question_id) VALUES ("Anonymous types don't work with LINQ.",0,115);
INSERT INTO answer(answer, correct, question_id) VALUES ("Namespaces",0,116);
INSERT INTO answer(answer, correct, question_id) VALUES ("LINQ",1,116);
INSERT INTO answer(answer, correct, question_id) VALUES ("Type Aliasing",0,116);
INSERT INTO answer(answer, correct, question_id) VALUES ("Assemblies",0,116);
INSERT INTO answer(answer, correct, question_id) VALUES ("It allows access to asynchronous methods in the C# API",0,117);
INSERT INTO answer(answer, correct, question_id) VALUES ("It allows thread pooling and synchronous processes in static classes.",0,117);
INSERT INTO answer(answer, correct, question_id) VALUES ("It allows the await keyword to be used in a method",1,117);
INSERT INTO answer(answer, correct, question_id) VALUES ("It allows access to synchronous methods in the C# API",0,117);
INSERT INTO answer(answer, correct, question_id) VALUES ("They do not support multiple inheritance.",1,118);
INSERT INTO answer(answer, correct, question_id) VALUES ("They support multiple inheritance.",0,118);
INSERT INTO answer(answer, correct, question_id) VALUES ("They can have only a set number of properties.",0,118);
INSERT INTO answer(answer, correct, question_id) VALUES ("They can have only a set number of methods.",0,118);
INSERT INTO answer(answer, correct, question_id) VALUES ("try, catch, valid, invalid",0,119);
INSERT INTO answer(answer, correct, question_id) VALUES ("try, valid, finally, throw",0,119);
INSERT INTO answer(answer, correct, question_id) VALUES ("try, catch, finally, throw",1,119);
INSERT INTO answer(answer, correct, question_id) VALUES ("finally, throw, valid, invalid",0,119);
INSERT INTO answer(answer, correct, question_id) VALUES ("The finally block is called during the execution of a try and catch block, while the finalize method is called after garbage collection.",0,120);
INSERT INTO answer(answer, correct, question_id) VALUES ("The finally block is called after the execution of a try and catch block, while the finalize method is called just before garbage collection.",1,120);
INSERT INTO answer(answer, correct, question_id) VALUES ("The finalize block is called before the execution of a try and catch block, while the finally method is called just before garbage collection.",0,120);
INSERT INTO answer(answer, correct, question_id) VALUES ("The finalize block is called during the execution of a try and catch block, while the finally method is called after garbage collection.",0,120);
INSERT INTO answer(answer, correct, question_id) VALUES ("django.middleware.common.CommonMiddleware",0,121);
INSERT INTO answer(answer, correct, question_id) VALUES ("django.middleware.cache.UpdateCacheMiddleware",0,121);
INSERT INTO answer(answer, correct, question_id) VALUES ("django.middleware.cache.FetchFromCacheMiddleware",0,121);
INSERT INTO answer(answer, correct, question_id) VALUES ("django.middleware.cache.AcceleratedCacheMiddleware",1,121);
INSERT INTO answer(answer, correct, question_id) VALUES ("C++",0,122);
INSERT INTO answer(answer, correct, question_id) VALUES ("Java",0,122);
INSERT INTO answer(answer, correct, question_id) VALUES ("Python",1,122);
INSERT INTO answer(answer, correct, question_id) VALUES ("Ruby",0,122);
INSERT INTO answer(answer, correct, question_id) VALUES ("validate(); Model",0,123);
INSERT INTO answer(answer, correct, question_id) VALUES ("group(); Model",0,123);
INSERT INTO answer(answer, correct, question_id) VALUES ("validate(); Form",0,123);
INSERT INTO answer(answer, correct, question_id) VALUES ("clean(); Field",1,123);
INSERT INTO answer(answer, correct, question_id) VALUES ("Raise MiddlewareNotUsed in the init function of your middleware.",1,124);
INSERT INTO answer(answer, correct, question_id) VALUES ("Implement the not_used method in your middleware class.",0,124);
INSERT INTO answer(answer, correct, question_id) VALUES ("List the middleware beneath an entry of django.middleware.IgnoredMiddleware.",0,124);
INSERT INTO answer(answer, correct, question_id) VALUES ("Write code to remove the middleware from the settings in [app]/init.py.",0,124);
INSERT INTO answer(answer, correct, question_id) VALUES ("Place that section between paragraph tags containing the autoescape=off switch.",0,125);
INSERT INTO answer(answer, correct, question_id) VALUES ("Wrap that section between { percentage mark autoescape off percentage mark} and {percentage mark endautoescape percentage mark} tags.",0,125);
INSERT INTO answer(answer, correct, question_id) VALUES ("Wrap that section between {percentage mark autoescapeoff percentage mark} and {percentage mark endautoescapeoff percentage mark} tags.",0,125);
INSERT INTO answer(answer, correct, question_id) VALUES ("You don't need to do anything�autoescaping is off by default.",1,125);
INSERT INTO answer(answer, correct, question_id) VALUES ("Check that the bin folder inside your Django directory is on your system path.",0,126);
INSERT INTO answer(answer, correct, question_id) VALUES ("Make sure you have activated the virtual environment you have set up containing Django.",0,126);
INSERT INTO answer(answer, correct, question_id) VALUES ("Check that you have installed Django.",0,126);
INSERT INTO answer(answer, correct, question_id) VALUES ("Make sure that you have created a Django project.",1,126);
INSERT INTO answer(answer, correct, question_id) VALUES ("template",0,127);
INSERT INTO answer(answer, correct, question_id) VALUES ("model",1,127);
INSERT INTO answer(answer, correct, question_id) VALUES ("database",0,127);
INSERT INTO answer(answer, correct, question_id) VALUES ("view",0,127);
INSERT INTO answer(answer, correct, question_id) VALUES ("Rainbow {}",0,128);
INSERT INTO answer(answer, correct, question_id) VALUES ("export Rainbow:",0,128);
INSERT INTO answer(answer, correct, question_id) VALUES ("class Rainbow:",1,128);
INSERT INTO answer(answer, correct, question_id) VALUES ("def Rainbow:",0,128);
INSERT INTO answer(answer, correct, question_id) VALUES ("django-admin startproject requirements.txt",0,129);
INSERT INTO answer(answer, correct, question_id) VALUES ("python install -r requirements.txt",0,129);
INSERT INTO answer(answer, correct, question_id) VALUES ("pip install -r requirements.txt",1,129);
INSERT INTO answer(answer, correct, question_id) VALUES ("pip install Django",0,129);
INSERT INTO answer(answer, correct, question_id) VALUES ("To make sure that your migrations are up to date, you should run updatemigrations before running your tests.",1,130);
INSERT INTO answer(answer, correct, question_id) VALUES ("You should back up your production database before running a migration.",0,130);
INSERT INTO answer(answer, correct, question_id) VALUES ("Your migration code should be under source control.",0,130);
INSERT INTO answer(answer, correct, question_id) VALUES ("If a project has a lot of data, you should test against a staging copy before running the migration on production.",0,130);
INSERT INTO answer(answer, correct, question_id) VALUES ("a string beginning with the letter Ra string beginning with the letter R",0,131);
INSERT INTO answer(answer, correct, question_id) VALUES ("an empty string at the server root",1,131);
INSERT INTO answer(answer, correct, question_id) VALUES ("a string containing ^ and $a string containing ^ and $",0,131);
INSERT INTO answer(answer, correct, question_id) VALUES ("an empty string anywhere in the URLan empty string anywhere in the URL",0,131);
INSERT INTO answer(answer, correct, question_id) VALUES ("concrete",0,132);
INSERT INTO answer(answer, correct, question_id) VALUES ("thread-safe",0,132);
INSERT INTO answer(answer, correct, question_id) VALUES ("abstract",1,132);
INSERT INTO answer(answer, correct, question_id) VALUES ("dynamic",0,132);
INSERT INTO answer(answer, correct, question_id) VALUES ("Set a session variable.",0,133);
INSERT INTO answer(answer, correct, question_id) VALUES ("Use a global variable.",0,133);
INSERT INTO answer(answer, correct, question_id) VALUES ("Add a dictionary to the template context.",0,133);
INSERT INTO answer(answer, correct, question_id) VALUES ("Use RequestContext.",1,133);
INSERT INTO answer(answer, correct, question_id) VALUES ("actions",1,134);
INSERT INTO answer(answer, correct, question_id) VALUES ("admin",0,134);
INSERT INTO answer(answer, correct, question_id) VALUES ("mezcal",0,134);
INSERT INTO answer(answer, correct, question_id) VALUES ("inlines",0,134);
INSERT INTO answer(answer, correct, question_id) VALUES ("show_fields()",0,135);
INSERT INTO answer(answer, correct, question_id) VALUES ("as_p()",1,135);
INSERT INTO answer(answer, correct, question_id) VALUES ("as_table()",0,135);
INSERT INTO answer(answer, correct, question_id) VALUES ("fields()",0,135);
INSERT INTO answer(answer, correct, question_id) VALUES ("The any() function will randomly return any item from the list.",0,136);
INSERT INTO answer(answer, correct, question_id) VALUES ("The any() function returns True if any item in the list evaluates to True. Otherwise, it returns False.",1,136);
INSERT INTO answer(answer, correct, question_id) VALUES ("The any() function takes as arguments the list to check inside, and the item to check for. If any of the items in the list match the item to check for, the function returns True.",0,136);
INSERT INTO answer(answer, correct, question_id) VALUES ("The any() function returns a Boolean value that answers the question Are there any items in this list?",0,136);
INSERT INTO answer(answer, correct, question_id) VALUES ("linked list",1,137);
INSERT INTO answer(answer, correct, question_id) VALUES ("queue",0,137);
INSERT INTO answer(answer, correct, question_id) VALUES ("set",0,137);
INSERT INTO answer(answer, correct, question_id) VALUES ("OrderedDict",0,137);
INSERT INTO answer(answer, correct, question_id) VALUES ("Static methods are called static because they always return None.",0,138);
INSERT INTO answer(answer, correct, question_id) VALUES ("Static methods can be bound to either a class or an instance of a class.",0,138);
INSERT INTO answer(answer, correct, question_id) VALUES ("Static methods serve mostly as utility methods or helper methods, since they can't access or modify a class's state.",1,138);
INSERT INTO answer(answer, correct, question_id) VALUES ("Static methods can access and modify the state of a class or an instance of a class.",0,138);
INSERT INTO answer(answer, correct, question_id) VALUES (".delete() method",0,139);
INSERT INTO answer(answer, correct, question_id) VALUES ("pop(my_list)",0,139);
INSERT INTO answer(answer, correct, question_id) VALUES ("del(my_list)",0,139);
INSERT INTO answer(answer, correct, question_id) VALUES (".pop() method",1,139);
INSERT INTO answer(answer, correct, question_id) VALUES ("to capture command-line arguments given at a file's runtime",1,140);
INSERT INTO answer(answer, correct, question_id) VALUES ("to connect various systems, such as connecting a web front end, an API service, a database, and a mobile app",0,140);
INSERT INTO answer(answer, correct, question_id) VALUES ("to take a snapshot of all the packages and libraries in your virtual environment",0,140);
INSERT INTO answer(answer, correct, question_id) VALUES ("to scan the health of your Python ecosystem while inside a virtual environment",0,140);
INSERT INTO answer(answer, correct, question_id) VALUES ("O(n), also called linear time.",0,141);
INSERT INTO answer(answer, correct, question_id) VALUES ("O(log n), also called logarithmic time.",0,141);
INSERT INTO answer(answer, correct, question_id) VALUES ("O(n^2), also called quadratic time.",0,141);
INSERT INTO answer(answer, correct, question_id) VALUES ("O(1), also called constant time.",1,141);
INSERT INTO answer(answer, correct, question_id) VALUES ("set",0,142);
INSERT INTO answer(answer, correct, question_id) VALUES ("list",1,142);
INSERT INTO answer(answer, correct, question_id) VALUES ("None",0,142);
INSERT INTO answer(answer, correct, question_id) VALUES ("dictionary",0,142);
INSERT INTO answer(answer, correct, question_id) VALUES ("class Game.LogicGame(): pass",0,143);
INSERT INTO answer(answer, correct, question_id) VALUES ("def Game(LogicGame): pass",0,143);
INSERT INTO answer(answer, correct, question_id) VALUES ("class Game(LogicGame): pass",1,143);
INSERT INTO answer(answer, correct, question_id) VALUES ("def Game.LogicGame(): pass",0,143);
INSERT INTO answer(answer, correct, question_id) VALUES ("You can assign a name to each of the namedtuple members and refer to them that way, similarly to how you would access keys in dictionary.",0,144);
INSERT INTO answer(answer, correct, question_id) VALUES ("Each member of a namedtuple object can be indexed to directly, just like in a regular tuple.",0,144);
INSERT INTO answer(answer, correct, question_id) VALUES ("namedtuples are just as memory efficient as regular tuples.",0,144);
INSERT INTO answer(answer, correct, question_id) VALUES ("No import is needed to use namedtuples because they are available in the standard library.",1,144);
INSERT INTO answer(answer, correct, question_id) VALUES ("Instance methods can modify the state of an instance or the state of its parent class.",1,145);
INSERT INTO answer(answer, correct, question_id) VALUES ("Instance methods hold data related to the instance.",0,145);
INSERT INTO answer(answer, correct, question_id) VALUES ("An instance method is any class method that doesn't take any arguments.",0,145);
INSERT INTO answer(answer, correct, question_id) VALUES ("An instance method is a regular function that belongs to a class, but it must return None.",0,145);
INSERT INTO answer(answer, correct, question_id) VALUES ("It protects the data from outside interference.",0,146);
INSERT INTO answer(answer, correct, question_id) VALUES ("A parent class is encapsulated and no data from the parent class passes on to the child class.",0,146);
INSERT INTO answer(answer, correct, question_id) VALUES ("It keeps data and the methods that can manipulate that data in one place.",0,146);
INSERT INTO answer(answer, correct, question_id) VALUES ("It only allows the data to be changed by methods.",1,146);
INSERT INTO answer(answer, correct, question_id) VALUES ("dictionary",0,147);
INSERT INTO answer(answer, correct, question_id) VALUES ("set",0,147);
INSERT INTO answer(answer, correct, question_id) VALUES ("None. You can only build a queue from scratch.",0,147);
INSERT INTO answer(answer, correct, question_id) VALUES ("list",1,147);
INSERT INTO answer(answer, correct, question_id) VALUES ("my_game = class.Game()",0,148);
INSERT INTO answer(answer, correct, question_id) VALUES ("my_game = class(Game)",0,148);
INSERT INTO answer(answer, correct, question_id) VALUES ("my_game = Game()",1,148);
INSERT INTO answer(answer, correct, question_id) VALUES ("my_game = Game.create()",0,148);
INSERT INTO answer(answer, correct, question_id) VALUES ("It creates a path from multiple values in an iterable to a single value.",0,149);
INSERT INTO answer(answer, correct, question_id) VALUES ("It applies a function to each item in an iterable and returns the value of that function.",1,149);
INSERT INTO answer(answer, correct, question_id) VALUES ("It converts a complex value type into simpler value types.",0,149);
INSERT INTO answer(answer, correct, question_id) VALUES ("It creates a mapping between two different elements of different iterables.",0,149);
INSERT INTO answer(answer, correct, question_id) VALUES ("slot",0,150);
INSERT INTO answer(answer, correct, question_id) VALUES ("dictionary",1,150);
INSERT INTO answer(answer, correct, question_id) VALUES ("queue",0,150);
INSERT INTO answer(answer, correct, question_id) VALUES ("sorted list",0,150);
INSERT INTO answer(answer, correct, question_id) VALUES ("A matrix may contain numeric values only.",0,151);
INSERT INTO answer(answer, correct, question_id) VALUES ("A matrix must not be singular.",0,151);
INSERT INTO answer(answer, correct, question_id) VALUES ("A data frame may contain variables that have different modes.",1,151);
INSERT INTO answer(answer, correct, question_id) VALUES ("A data frame may contain variables of different lengths.",0,151);
INSERT INTO answer(answer, correct, question_id) VALUES ("1",0,152);
INSERT INTO answer(answer, correct, question_id) VALUES ("365",1,152);
INSERT INTO answer(answer, correct, question_id) VALUES ("4",0,152);
INSERT INTO answer(answer, correct, question_id) VALUES ("12",0,152);
INSERT INTO answer(answer, correct, question_id) VALUES ("remove()",1,153);
INSERT INTO answer(answer, correct, question_id) VALUES ("erase()",0,153);
INSERT INTO answer(answer, correct, question_id) VALUES ("detach()",0,153);
INSERT INTO answer(answer, correct, question_id) VALUES ("delete()",0,153);
INSERT INTO answer(answer, correct, question_id) VALUES ("height(length(height))",0,154);
INSERT INTO answer(answer, correct, question_id) VALUES ("height[length(height)]",1,154);
INSERT INTO answer(answer, correct, question_id) VALUES ("height[length[height]]",0,154);
INSERT INTO answer(answer, correct, question_id) VALUES ("height(5)",0,154);
INSERT INTO answer(answer, correct, question_id) VALUES ("Var_A!",0,155);
INSERT INTO answer(answer, correct, question_id) VALUES ("\_VarA",0,155);
INSERT INTO answer(answer, correct, question_id) VALUES (".2Var_A",0,155);
INSERT INTO answer(answer, correct, question_id) VALUES ("Var2_A",1,155);
INSERT INTO answer(answer, correct, question_id) VALUES ("A matrix has two dimensions, while an array can have three or more dimensions.",1,156);
INSERT INTO answer(answer, correct, question_id) VALUES ("An array is a subtype of the data frame, while a matrix is a separate type entirely.",0,156);
INSERT INTO answer(answer, correct, question_id) VALUES ("A matrix can have columns of different lengths, but an array's columns must all be the same length.",0,156);
INSERT INTO answer(answer, correct, question_id) VALUES ("A matrix may contain numeric values only, while an array can mix different types of values.",0,156);
INSERT INTO answer(answer, correct, question_id) VALUES ("type",0,157);
INSERT INTO answer(answer, correct, question_id) VALUES ("length",0,157);
INSERT INTO answer(answer, correct, question_id) VALUES ("attributes",0,157);
INSERT INTO answer(answer, correct, question_id) VALUES ("scalar",1,157);
INSERT INTO answer(answer, correct, question_id) VALUES ("BOF(pizza, 5)",0,158);
INSERT INTO answer(answer, correct, question_id) VALUES ("first(pizza, 5)",0,158);
INSERT INTO answer(answer, correct, question_id) VALUES ("top(pizza, 5)",0,158);
INSERT INTO answer(answer, correct, question_id) VALUES ("head(pizza, 5)",1,158);
INSERT INTO answer(answer, correct, question_id) VALUES ("console(-25)",0,159);
INSERT INTO answer(answer, correct, question_id) VALUES ("console(reverse=TRUE)",0,159);
INSERT INTO answer(answer, correct, question_id) VALUES ("history()",0,159);
INSERT INTO answer(answer, correct, question_id) VALUES ("history(max.show = 25)",1,159);
INSERT INTO answer(answer, correct, question_id) VALUES ("Vectors are used only for numeric data, while list are useful for both numeric and string data.",0,160);
INSERT INTO answer(answer, correct, question_id) VALUES ("Vectors and lists are the same thing and can be used interchangeably.",0,160);
INSERT INTO answer(answer, correct, question_id) VALUES ("A vector contains items of a single data type, while a list can contain items of different data types.",1,160);
INSERT INTO answer(answer, correct, question_id) VALUES ("Vectors are like arrays, while lists are like data frames.",0,160);
INSERT INTO answer(answer, correct, question_id) VALUES ("list.objects()",0,161);
INSERT INTO answer(answer, correct, question_id) VALUES ("print.objects()",0,161);
INSERT INTO answer(answer, correct, question_id) VALUES ("getws()",0,161);
INSERT INTO answer(answer, correct, question_id) VALUES ("ls()",1,161);
INSERT INTO answer(answer, correct, question_id) VALUES ("rbind()",0,162);
INSERT INTO answer(answer, correct, question_id) VALUES ("cbind()",1,162);
INSERT INTO answer(answer, correct, question_id) VALUES ("bind()",0,162);
INSERT INTO answer(answer, correct, question_id) VALUES ("coerce()",0,162);
INSERT INTO answer(answer, correct, question_id) VALUES ("cor.test(Var1 ~ Var2)",0,163);
INSERT INTO answer(answer, correct, question_id) VALUES ("cor.test(mydata$(Var1,Var2))",0,163);
INSERT INTO answer(answer, correct, question_id) VALUES ("cor.test(mydata$Var1,mydata$Var2)",1,163);
INSERT INTO answer(answer, correct, question_id) VALUES ("cor.test(mydata$Var1,mydata$Var2)",0,163);
INSERT INTO answer(answer, correct, question_id) VALUES ("data frame: names() and rownames() matrix: colnames() and row.names()",0,164);
INSERT INTO answer(answer, correct, question_id) VALUES ("data frame: names() and row.names() matrix: dimnames() (not sure)",1,164);
INSERT INTO answer(answer, correct, question_id) VALUES ("data frame: colnames() and row.names() matrix: names() and rownames()",0,164);
INSERT INTO answer(answer, correct, question_id) VALUES ("data frame: colnames() and rownames() matrix: names() and row.names()",0,164);
INSERT INTO answer(answer, correct, question_id) VALUES ("connect()",0,165);
INSERT INTO answer(answer, correct, question_id) VALUES ("concat()",0,165);
INSERT INTO answer(answer, correct, question_id) VALUES ("contact()",0,165);
INSERT INTO answer(answer, correct, question_id) VALUES ("c()",1,165);
INSERT INTO answer(answer, correct, question_id) VALUES ("Refers to aesthetics. It includes variable names used to create plots.",0,166);
INSERT INTO answer(answer, correct, question_id) VALUES ("Are used to represent data.",1,166);
INSERT INTO answer(answer, correct, question_id) VALUES ("This parameter is used to alter information represented at x axis.",0,166);
INSERT INTO answer(answer, correct, question_id) VALUES ("It performs the same task as scale_x_continuous but for y axis.",0,166);
INSERT INTO answer(answer, correct, question_id) VALUES ("Refers to aesthetics. It includes variable names used to create plots.",1,167);
INSERT INTO answer(answer, correct, question_id) VALUES ("Are used to represent data.",0,167);
INSERT INTO answer(answer, correct, question_id) VALUES ("This parameter is used to alter information represented at x axis.",0,167);
INSERT INTO answer(answer, correct, question_id) VALUES ("It performs the same task as scale_x_continuous but for y axis.",0,167);
INSERT INTO answer(answer, correct, question_id) VALUES ("package for creating graphics with details from statistical tests included in the information-rich plots themselves.",0,168);
INSERT INTO answer(answer, correct, question_id) VALUES ("is a system for declaratively creating graphics, based on The Grammar of Graphics",1,168);
INSERT INTO answer(answer, correct, question_id) VALUES ("It allows you to draw bar plots, curves, scatter plots, histograms, boxplot and sf objects, then export the graph or retrieve the code to reproduce the graph.",0,168);
INSERT INTO answer(answer, correct, question_id) VALUES ("Ridgeline plots are partially overlapping line plots that create the impression of a mountain range.",0,168);
INSERT INTO answer(answer, correct, question_id) VALUES ("geom_bar()",0,169);
INSERT INTO answer(answer, correct, question_id) VALUES ("geom_dotplot()",0,169);
INSERT INTO answer(answer, correct, question_id) VALUES ("geom_boxplot()",0,169);
INSERT INTO answer(answer, correct, question_id) VALUES ("geom_point()",1,169);
INSERT INTO answer(answer, correct, question_id) VALUES ("geom_bar()",0,170);
INSERT INTO answer(answer, correct, question_id) VALUES ("geom_histogram()",1,170);
INSERT INTO answer(answer, correct, question_id) VALUES ("geom_boxplot()",0,170);
INSERT INTO answer(answer, correct, question_id) VALUES ("geom_point()",0,170);
INSERT INTO answer(answer, correct, question_id) VALUES ("Is used to test the level of correlation among the variable available in the data set.",0,171);
INSERT INTO answer(answer, correct, question_id) VALUES ("Is used when we want to plot one continuous variable.",1,171);
INSERT INTO answer(answer, correct, question_id) VALUES ("Is used when want to see the relationship between two continuous variables.",0,171);
INSERT INTO answer(answer, correct, question_id) VALUES ("Is used intensity (density) of colors to display relationship between two or three or many variables in a two dimensional image.",0,171);
INSERT INTO answer(answer, correct, question_id) VALUES ("Is used to test the level of correlation among the variable available in the data set.",1,172);
INSERT INTO answer(answer, correct, question_id) VALUES ("Is used when we want to plot one continuous variable.",0,172);
INSERT INTO answer(answer, correct, question_id) VALUES ("Is used when want to see the relationship between two continuous variables.",0,172);
INSERT INTO answer(answer, correct, question_id) VALUES ("Is used intensity (density) of colors to display relationship between two or three or many variables in a two dimensional image.",0,172);
INSERT INTO answer(answer, correct, question_id) VALUES ("Is used to test the level of correlation among the variable available in the data set.",0,173);
INSERT INTO answer(answer, correct, question_id) VALUES ("Is used when we want to plot one continuous variable.",0,173);
INSERT INTO answer(answer, correct, question_id) VALUES ("Is used when want to see the relationship between two continuous variables.",1,173);
INSERT INTO answer(answer, correct, question_id) VALUES ("Is used intensity (density) of colors to display relationship between two or three or many variables in a two dimensional image.",0,173);
INSERT INTO answer(answer, correct, question_id) VALUES ("Generates small multiples, each displaying a different subset of the data.",0,174);
INSERT INTO answer(answer, correct, question_id) VALUES ("it provides a way for package authors to add methods that work like the base plot() function, generating useful default plots with little user interaction.",0,174);
INSERT INTO answer(answer, correct, question_id) VALUES ("Help readers interpret your plots.",0,174);
INSERT INTO answer(answer, correct, question_id) VALUES ("Control the details of how data values are translated to visual properties.",1,174);
INSERT INTO answer(answer, correct, question_id) VALUES ("Generates small multiples, each displaying a different subset of the data.",1,175);
INSERT INTO answer(answer, correct, question_id) VALUES ("it provides a way for package authors to add methods that work like the base plot() function, generating useful default plots with little user interaction.",0,175);
INSERT INTO answer(answer, correct, question_id) VALUES ("Help readers interpret your plots.",0,175);
INSERT INTO answer(answer, correct, question_id) VALUES ("Control the details of how data values are translated to visual properties.",0,175);
INSERT INTO answer(answer, correct, question_id) VALUES ("ANOVAData, anovadata",0,176);
INSERT INTO answer(answer, correct, question_id) VALUES ("VisitPCA, VarX",1,176);
INSERT INTO answer(answer, correct, question_id) VALUES ("VisitPCA, varx",0,176);
INSERT INTO answer(answer, correct, question_id) VALUES ("Xvar, Yvar",0,176);
INSERT INTO answer(answer, correct, question_id) VALUES ("vector(MyList, length = 7)",0,177);
INSERT INTO answer(answer, correct, question_id) VALUES ("coerce(MyList, nrows = 1)",0,177);
INSERT INTO answer(answer, correct, question_id) VALUES ("unlist(MyList)",1,177);
INSERT INTO answer(answer, correct, question_id) VALUES ("coerce(MyList, nrows = 7)",0,177);
INSERT INTO answer(answer, correct, question_id) VALUES ("patchwork",0,178);
INSERT INTO answer(answer, correct, question_id) VALUES ("ggstatsplot",0,178);
INSERT INTO answer(answer, correct, question_id) VALUES ("gganimate",1,178);
INSERT INTO answer(answer, correct, question_id) VALUES ("hrbrthemes",0,178);
INSERT INTO answer(answer, correct, question_id) VALUES ("ggrepel",0,179);
INSERT INTO answer(answer, correct, question_id) VALUES ("ggstatsplot",0,179);
INSERT INTO answer(answer, correct, question_id) VALUES ("ggfx",1,179);
INSERT INTO answer(answer, correct, question_id) VALUES ("hrbrthemes",0,179);
INSERT INTO answer(answer, correct, question_id) VALUES ("tableplot(dataset)",1,180);
INSERT INTO answer(answer, correct, question_id) VALUES ("autolayer(dataset)",0,180);
INSERT INTO answer(answer, correct, question_id) VALUES ("autoplot(datase)",0,180);
INSERT INTO answer(answer, correct, question_id) VALUES ("map_data(dataset)",0,180);

//Users
INSERT INTO user(email, name, nick_name, user_password) VALUES ("ealopezalmira@gmail.com", "Edwin Almira", "edwinalmira", "pass12385");
INSERT INTO user(email, name, nick_name, user_password) VALUES ("Aherrh02@gmail.con", "Alejandro Herrera", "aherrh02", "pass12385");
INSERT INTO user(email, name, nick_name, user_password) VALUES ("ruben.vigil24@gmail.com", "Ruben Vigil", "vigil24", "pass12385");
INSERT INTO user(email, name, nick_name, user_password) VALUES ("cycles.250@gmail.com", "Adilson Arbuez", "cycles", "pass12385");
INSERT INTO user(email, name, nick_name, user_password) VALUES ("amayaricardo2607@gmail.com", "Ricardo Amaya", "richardamaya26", "pass12385");
    
//Tests
INSERT INTO `test` (`date`, `grade`, `items_count`, `user_id`) VALUES ('2021-09-25 02:13:00.000000', '70', '10', '3');
INSERT INTO `test` (`date`, `grade`, `items_count`, `user_id`) VALUES ('2021-09-25 02:13:00.000000', '80', '5', '1');
INSERT INTO `test` (`date`, `grade`, `items_count`, `user_id`) VALUES ('2021-09-25 02:13:00.000000', '100', '15', '3');

//Test items
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,1,1);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,2,1);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (0,3,1);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,4,1);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,5,1);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (0,6,1);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,7,1);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (0,8,1);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,9,1);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,10,1);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,61,2);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,62,2);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,63,2);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (0,64,2);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,65,2);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,151,3);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,151,3);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,153,3);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,154,3);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,155,3);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,156,3);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,157,3);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,158,3);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,159,3);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,160,3);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,161,3);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,162,3);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,163,3);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,164,3);
INSERT INTO `test_item` (`solved_correctly`, `question_id`, `test_id`) VALUES (1,165,3);